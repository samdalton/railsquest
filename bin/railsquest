#!/usr/bin/env ruby

lib = File.expand_path('../../lib/', __FILE__)
$:.unshift lib unless $:.include?(lib)

require 'railsquest'

Thread.abort_on_exception = true

Railsquest.setup! if !Railsquest.setup?

parent_process_pid = Process.pid
pids = []
at_exit do 
  if Process.pid == parent_process_pid
    pids.each do |pid| 
      Process.kill("TERM", pid) rescue nil
      sleep 0.2
    end
  end
end

case ARGV.first

when nil
  pids << Railsquest.serve_web!
  pids << Railsquest.advertise!
  Process.waitall

when "add", "init"
  quest = Railsquest.add!(ARGV[1], ARGV[2])

when "remove", "rm"
  name = ARGV[1]

  if !name || name.empty?
    abort "You need to specify the name of the quest you'd like to remove:\n#{File.basename($0)} remove <path>"
  elsif !(quest = Railsquest::Quest.for_name(name))
    abort "#{name.inspect} is not a valid quest name"
  end

  quest.remove!

when "help", "--help", "-h"
  puts <<-HELP
Usage: #{File.basename($0)} [<command>]

Commands:
  none               - Start the web, quest, and bonjour serving
  add <port> <name>         - Add a quest running on server port with given name
  remove <name>      - Remove a quest 
  help
  version
HELP

when "version", "--version", "-v"
  puts "railsquest version #{Railsquest::VERSION}"

else
  abort "Say what? Try: #{File.basename($0)} help"
end